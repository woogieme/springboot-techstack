
실무에서는 이런 방법을 다 사용한다.

V1 인터페이스와 구현 클래스 - 스프링 빈으로 수동 등록
V2 인터페이스 없는 구체 클래스 - 스프링 빈으로 수동 등록
V3 컴포넌트 스캔으로 스프링 빈으로 자동 등록


@RequestMapping은 @Contoller 또는 @RequestMapping 어노테이션 타입이있어야 스프링 컨트롤러로 인식한다.
그리고 스프링 컨트롤러로 인식해야 HTTP URL이 매핑되고 동작한다. 이 어노테이션은 인터페이스에 사용해도된다.

@ResponseBody HTTP 메세지 컨버터를 사용해서 응답한다. 이 어노테이션은 인터페이스에 사용해도된다.
코드를 보면 request(), noLog() 두가지 메서드가 있다. request()는 LogTrace를 적용할 대상이고, noLog()는 단순히 LogTrace를 적용하지
않을 대상이다.